1、centos 7.5 安装
①卸载旧版本
sudo yum remove docker \
                  docker-client \
                  docker-client-latest \
                  docker-common \
                  docker-latest \
                  docker-latest-logrotate \
                  docker-logrotate \
                  docker-engine
②安装依赖的软件包
sudo yum install -y yum-utils device-mapper-persistent-data lvm2
③添加Docker文档版本的yum源
sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
④安装最新版本的docker引擎(社区版)
sudo yum -y install docker-ce docker-ce-cli containerd.io
⑤把普通用户添加到docker 组
sudo usermod -aG docker ludonghua
⑥启动Docker服务
sudo systemctl start docker
⑦配置国内镜像源地址
sudo mkdir -p /etc/docker
sudo vim /etc/docker/daemon.json
{
  "registry-mirrors": ["https://3v3557j2.mirror.aliyuncs.com"]
}
sudo systemctl daemon-reload
sudo systemctl restart docker

⑧测试docker run hello-world

2、镜像命令
①帮助命令
docker version
docker info
docker --help

②镜像命令
docker images 列出本地主机上的镜像
    -a 列出本地所有的镜像(含中间映像层)
    -q 只显示镜像ID
    --digests 显示镜像的摘要信息
    --no-trunc 显示完整的镜像信息
docker search 某个xxx镜像名字
    -s 列出收藏数不小于指定值的镜像
docker pull 某个xxx镜像名字
docker rmi 某个xxx镜像名字ID
    -f 强制删除
    -f $(docker images -qa) 全部删除

③容器命令
docker pull centos
新建并启动容器 docker run
    --name="容器新名字"，为容器指定一个名称
    -d 后台运行容器，并返回容器ID，即启动守护式容器
    -i 以交互模式运行容器，通常与-t同时使用
    -t 为容器重新分配一个伪终端，通常与-i同时使用
    -P 随机端口映射
    -p 指定端口映射，有一下四种格式
        ip:hostPort:containerPort
        ip::containerPort
        hostPort:containerPort
        containerPort
    docker run -it 5d0da3dc9764
列出当前所有正在运行的容器 docker ps
    -a 列出当前所有正在运行的容器+历史上运行过的
    -l 显示最近创建的容器
    -n 显示最近n个创建的容器
    -q 静默模式，只显示容器编号
    --no-trunc 不截断输出
退出容器
    exit 容器停止退出
    ctrl+P+Q 容器不停止退出
启动容器 docker start 容器ID或容器名
重启容器 docker restart 容器ID或容器名
停止容器 docker stop 容器ID或容器名
强制停止容器 docker kill 容器ID或容器名
删除已停止的容器 docker rm 容器ID容器ID或容器名
    docker rm -f $(docker ps -a -q)
    docker ps -a -q | xargs docker rm

重要
启动守护式容器 docker run -d 容器名
查看容器日志 docker logs -f -t --tail 容器ID
查看容器内运行的进程 docker top 容器ID
查看容器内部细节 docker inspect 容器ID
进入正在运行的容器并以命令行交互
    docker exec -it 容器ID bashShell 在容器中打开新的终端，并可以启动新的进程
    重新进去 docker attach 容器ID 直接进入容器启动命令的终端，不会启动新的进程
从容器内拷贝文件到主机内 docker cp 容器ID:容器内路径 日的主机路径


